---
- name: create project path, virtual env path and logs directory
  file: path={{ item }} state=directory
  with_items:
     - "{{ mezzanine_proj_path }}"
     - "{{ mezzanine_venv_path }}"
     - "{{ ansible_env.HOME}}/logs"

- name: check out the repository on the host
  git: repo={{ mezzanine_repo_url }} dest={{ mezzanine_proj_path }}

- name: Install Python requirements globally via pip
  pip: name={{ item }} state=latest
  with_items:
     - pip
     - virtualenv
     - virtualenvwrapper
  become: True

- name: Install requirements.txt
  pip: requirements={{ mezzanine_proj_path }}/{{ mezzanine_reqs_path }} virtualenv={{ mezzanine_venv_path }}

- name: generate the settings file
  template: src=local_settings.py.j2 dest={{ mezzanine_settings_path }}/local_settings.py

- name: sync the database, apply migrations, collect static content
  django_manage:
    command: "{{ item }}"
    app_path: "{{ mezzanine_proj_path }}"
    virtualenv: "{{ mezzanine_venv_path }}"
  with_items:
    - migrate
    - collectstatic

- name: set the site id
  script: scripts/setsite.py
  environment:
    PATH: "{{ mezzanine_venv_path }}/bin"
    PROJECT_DIR: "{{ mezzanine_proj_path }}"
    PROJECT_APP: "{{ mezzanine_proj_app }}"
    WEBSITE_DOMAIN: "{{ live_hostname }}"

- name: set the admin password
  script: scripts/setadmin.py
  environment:
    PATH: "{{ mezzanine_venv_path }}/bin"
    PROJECT_DIR: "{{ mezzanine_proj_path }}"
    PROJECT_APP: "{{ mezzanine_proj_app }}"
    ADMIN_PASSWORD: "{{ admin_pass }}"

- name: set the gunicorn config file
  template:
    src: gunicorn.conf.py.j2
    dest: "{{  mezzanine_proj_path }}/gunicorn.conf.py"

- name: create systemd socket for gunicorn
  template:
    src: gunicorn.socket.j2
    dest: /etc/systemd/system/gunicorn.socket
  become: True
  notify: restart gunicorn_socket

- name: set systemd service file for gunicorn
  template:
    src: gunicorn.service.j2
    dest: /etc/systemd/system/gunicorn.service
  become: True
  notify: restart gunicorn_service

- name: set the supervisor config file
  template:
    src: supervisor.conf.j2
    dest: /etc/supervisor/conf.d/mezzanine.conf
  become: True
  notify: restart supervisor

- name: install poll twitter cron job
  cron: >
    name="poll twitter" minute="*/5" user={{ mezzanine_user }} 
    job="{{ mezzanine_manage }} poll_twitter"
